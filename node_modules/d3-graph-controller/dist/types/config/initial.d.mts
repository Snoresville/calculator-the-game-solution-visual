import type { LinkFilter } from './filter.mjs';
import type { NodeTypeToken } from '../model/graph.mjs';
import type { GraphLink } from '../model/link.mjs';
import type { GraphNode } from '../model/node.mjs';
/**
 * Initial settings of a controller.
 */
export interface InitialGraphSettings<T extends NodeTypeToken, Node extends GraphNode<T>, Link extends GraphLink<T, Node>> {
    /**
     * Whether nodes without incoming or outgoing links will be shown or not.
     */
    readonly includeUnlinked: boolean;
    /**
     * Link filter that decides whether links should be included or not.
     */
    readonly linkFilter: LinkFilter<T, Node, Link>;
    /**
     * Node types that should be included.
     * If undefined, all node types will be included.
     */
    readonly nodeTypeFilter?: T[] | undefined;
    /**
     * Whether link labels are shown or not.
     */
    readonly showLinkLabels: boolean;
    /**
     * Whether node labels are shown or not.
     */
    readonly showNodeLabels: boolean;
}
/**
 * Create default initial settings.
 */
export declare function createDefaultInitialGraphSettings<T extends NodeTypeToken, Node extends GraphNode<T>, Link extends GraphLink<T, Node>>(): InitialGraphSettings<T, Node, Link>;
