import type { Selection } from 'd3-selection';
import type { D3ZoomEvent } from 'd3-zoom';
import type { GraphConfig } from '../config/config.mjs';
import type { Zoom } from './types.mjs';
import type { NodeTypeToken } from '../model/graph.mjs';
import type { GraphLink } from '../model/link.mjs';
import type { GraphNode } from '../model/node.mjs';
export interface DefineZoomParams<T extends NodeTypeToken, Node extends GraphNode<T>, Link extends GraphLink<T, Node>> {
    readonly canvasContainer: () => Selection<SVGSVGElement, unknown, null, undefined>;
    readonly config: GraphConfig<T, Node, Link>;
    readonly min: number;
    readonly max: number;
    readonly onZoom: (event: D3ZoomEvent<SVGSVGElement, undefined>) => void;
}
export declare function defineZoom<T extends NodeTypeToken, Node extends GraphNode<T>, Link extends GraphLink<T, Node>>({ canvasContainer, config, min, max, onZoom, }: DefineZoomParams<T, Node, Link>): Zoom;
