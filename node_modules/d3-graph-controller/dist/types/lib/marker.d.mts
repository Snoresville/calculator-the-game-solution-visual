import type { GraphConfig } from '../config/config.mjs';
import type { Canvas, MarkerSelection } from './types.mjs';
import type { Graph, NodeTypeToken } from '../model/graph.mjs';
import type { GraphLink } from '../model/link.mjs';
import type { GraphNode } from '../model/node.mjs';
export declare function defineMarkerSelection(canvas: Canvas): MarkerSelection;
export interface CreateMarkerParams<T extends NodeTypeToken, Node extends GraphNode<T>, Link extends GraphLink<T, Node>> {
    readonly config: GraphConfig<T, Node, Link>;
    readonly graph: Graph<T, Node, Link>;
    readonly selection?: MarkerSelection | undefined;
}
export declare function createMarkers<T extends NodeTypeToken, Node extends GraphNode<T>, Link extends GraphLink<T, Node>>({ config, graph, selection, }: CreateMarkerParams<T, Node, Link>): MarkerSelection | undefined;
